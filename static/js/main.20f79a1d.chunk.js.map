{"version":3,"sources":["../../src/index.tsx","App.js","index.js"],"names":["input","config","onDone","m","s","h","intervalInMs","React.useState","count","setCount","diff","remainingMilliseconds","duration","asMilliseconds","started","setStarted","setTimeout","clearTimeout","callback","delay","savedCallback","React.useRef","React.useEffect","current","id","setInterval","clearInterval","undefined","time","utc","start","stop","App","useCountdown","alert","style","height","width","display","justifyContent","alignItems","flexDirection","format","marginTop","onClick","ReactDOM","render","document","getElementById"],"mappings":"2NAyBa,EAAe,SAC1BA,EACAC,QADA,IAAAD,MAAA,SACA,IAAAC,MAAA,CAA6BC,OAAQ,WAAM,YAEnC,MAAwBF,EAAnB,EAALG,OAAC,IAAG,IAAC,EAAE,EAAiBH,EAAZ,EAALI,OAAC,IAAG,IAAC,EAAE,EAAUJ,EAAL,EAALK,OAAC,IAAG,IAAC,EACnBH,EAAWD,EAAL,OACRK,EAAmB,GAAJD,EAAS,GAAK,IAAW,GAAJF,EAAS,IAAW,IAAJC,EACpD,EAAoBG,mBAAe,GAAlCC,EAAK,KAAEC,EAAQ,KAChBC,EAAOJ,EAAeE,EAEtBG,EADoB,IAAOC,SAASF,EAAM,gBACAG,iBAE1C,EAAwBN,oBAAe,GAAtCO,EAAO,KAAEC,EAAU,KAE1B,GAAID,GAAqC,IAA1BH,EAGb,IAAM,EAAUK,YAAW,WACzBD,GAAW,GACXb,IACAe,aAAa,KACZ,GAYL,OAvDkB,SAACC,EAAqBC,QAAA,IAAAA,MAAA,KACxC,IAAMC,EAAgBC,kBAAwB,WAAM,YAGpDC,qBAAgB,WACdF,EAAcG,QAAUL,IACvB,CAACA,IAGJI,qBAAgB,WAId,IAAIE,EAAKC,aAHT,WACEL,EAAcG,YAEWJ,GAC3B,OAAO,WAAM,OAAAO,cAAcF,MAC1B,CAACL,IA+BJ,EACE,WACML,GAAqC,IAA1BH,GACbF,EAASD,EAAQ,OAGrBM,EAAU,SAAOa,GAGZ,CACLC,KAAM,IAAOC,IAAIlB,GACjBmB,MAAO,WAAM,OAAAf,GAAW,IACxBgB,KAAM,WAAM,OAAAhB,GAAW,IACvBD,QAAO,ICtCIkB,MApBH,KAAO,MAAD,EACcC,EAAa,CAAE7B,EAAG,IAAM,CAACF,OAAQ,IAAMgC,MAAM,gDAAnEJ,EADQ,EACRA,MAAOF,EADC,EACDA,KAAMG,EADL,EACKA,KACrB,OACE,yBACEI,MAAO,CACLC,OAAQ,QACRC,MAAO,QACPC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,cAAe,WAGhBb,EAAKc,OAAO,SACb,4BAAQP,MAAO,CAACQ,UAAW,IAAKC,QAASd,GAAzC,SACA,4BAAQK,MAAO,CAACQ,UAAW,IAAKC,QAASb,GAAzC,UCbNc,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.20f79a1d.chunk.js","sourcesContent":["import * as React from \"react\";\nimport moment from \"moment\";\n\nconst useInterval = (callback: () => any, delay: number = 1000) => {\n  const savedCallback = React.useRef<() => any>(() => true);\n\n  // Remember the latest callback.\n  React.useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  React.useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    let id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n};\n\nexport type CountdownInput = { m?: number; s?: number; h?: number } | undefined;\nexport type CountdownConfig = { onDone: () => any }\n\n\nexport const useCountdown = (\n  input: CountdownInput = {},\n  config: CountdownConfig  = { onDone: () => true }\n) => {\n  const { m = 0, s = 0, h = 0 } = input;\n  const { onDone } = config;\n  const intervalInMs = h * 60 * 60 * 1000 + m * 60 * 1000 + s * 1000;\n  const [count, setCount] = React.useState(0);\n  const diff = intervalInMs - count;\n  const remainingDuration = moment.duration(diff, \"milliseconds\");\n  const remainingMilliseconds = remainingDuration.asMilliseconds();\n\n  const [started, setStarted] = React.useState(false);\n\n  if (started && remainingMilliseconds === 0) {\n    // callOnDone after a single tick to avoid running before the\n    // time renders\n    const timeout = setTimeout(() => {\n      setStarted(false);\n      onDone();\n      clearTimeout(timeout)\n    }, 1)\n  }\n\n  useInterval(\n    () => {\n      if (started && remainingMilliseconds !== 0) {\n        setCount(count + 1000);\n      }\n    },\n    started ? 1000 : undefined\n  );\n\n  return {\n    time: moment.utc(remainingMilliseconds),\n    start: () => setStarted(true),\n    stop: () => setStarted(false),\n    started,\n  };\n};\n","import React from \"react\";\n\nimport { useCountdown } from \"use-moment-countdown\";\n\nconst App = () => {\n  const { start, time, stop } = useCountdown({ s: 10 }, {onDone: () => alert(\"You can pass an onDone function like this!\")});\n  return (\n    <div\n      style={{\n        height: \"100vh\",\n        width: \"100vw\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\"\n      }}\n    >\n      {time.format(\"mm:ss\")}\n      <button style={{marginTop: 20}} onClick={start}>Start</button>\n      <button style={{marginTop: 20}} onClick={stop}>Stop</button>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}